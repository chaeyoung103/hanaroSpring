# ===================================================
#                상품 (Product) API
# ===================================================

### 1. 상품 등록 (관리자 권한)
# [중요!] REST Client에서 multipart/form-data를 보내는 방식입니다.
# 파일(images)과 JSON 데이터(dto)를 함께 보냅니다.
POST {{baseUrl}}/products
Authorization: Bearer {{adminToken}}
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="name"

사과
--boundary
Content-Disposition: form-data; name="price"

15000
--boundary
Content-Disposition: form-data; name="description"

이것은 새로 등록하는 상품 A에 대한 설명입니다.
--boundary
Content-Disposition: form-data; name="stockQuantity"

100
--boundary
# 아래 'images' 파트에서 '<' 뒤에 있는 경로에 실제 이미지 파일을 위치시켜야 합니다.
# 예: /Users/yourname/Desktop/image1.jpg
Content-Disposition: form-data; name="images"; filename="image1.png"
Content-Type: image/png

< /Users/songchaeyeong/Desktop/KakaoTalk_Photo_2025-08-10-16-28-04.png

--boundary
Content-Disposition: form-data; name="images"; filename="image2.png"
Content-Type: image/png

< /Users/songchaeyeong/Desktop/KakaoTalk_Photo_2025-08-10-16-28-04.png

--boundary--


### 2. 상품 목록 전체 조회 (관리자 권한)
# 요구사항: 관리자는 전체 상품 목록을 조회할 수 있다.
# 예상 결과: 200 OK, 전체 상품 목록 반환
GET {{baseUrl}}/products
Authorization: Bearer {{adminToken}}


### 3. 상품 목록 검색 (사용자, 키워드 포함)
# 요구사항: 일반 사용자는 키워드로 상품을 검색할 수 있다.
# 예상 결과: 200 OK, '새로운'이 이름에 포함된 상품 목록 반환
GET {{baseUrl}}/products/search?keyword=사과
Authorization: Bearer {{userToken}}


### 4. 상품 목록 검색 (사용자, 키워드 없음)
# 요구사항: 키워드가 없는 경우 전체 목록을 보여준다.
# 예상 결과: 200 OK, 전체 상품 목록 반환
GET {{baseUrl}}/products/search
Authorization: Bearer {{userToken}}


### 4. (미구현) 특정 상품 수정 (관리자 권한)
PUT {{baseUrl}}/products/1
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "수정된 상품 A",
  "price": 16000,
  "description": "이것은 수정된 상품 A에 대한 설명입니다.",
  "stockQuantity": 90
}


### 5. (미구현) 특정 상품 삭제 (관리자 권한)
DELETE {{baseUrl}}/products/1
Authorization: Bearer {{adminToken}}